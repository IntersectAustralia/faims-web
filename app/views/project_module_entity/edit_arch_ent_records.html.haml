- title @project_module.name + " - Entity"
%div
  - if params[:uuid]
    .muted.entity-breadcrumb= "[uuid:#{params[:uuid]}]"
  = breadcrumbs
- get_files(@attributes, 12, 13, 5)
.form-actions
  - if params[:prev_uuid]
    = link_to "<i class='icon-arrow-left'></i> Back".html_safe, edit_arch_ent_records_path(@project_module, params[:prev_uuid], search_params), :class => 'btn'
  - else
    = link_to "<i class='icon-arrow-left'></i> Back".html_safe, search_arch_ent_records_path(@project_module, search_params), :class => 'btn'
  = link_to "", get_arch_ent_record_data_path(@project_module, params[:uuid]), :class => "hidden", :id => 'setup-attributes'
  = link_to "", batch_update_arch_ent_records_path(@project_module, params[:uuid]), :class => "hidden", :id => 'update-all', :method => "post"
  - if @deleted[1]
    = link_to "<i class='icon-edit icon-white'></i> Restore".html_safe, restore_arch_ent_records_path(@project_module, params[:uuid], search_params), :class => 'btn btn-warning pull-right', :id => 'restore-record'
  - else
    = link_to "<i class='icon-remove icon-white'></i> Delete".html_safe, delete_arch_ent_records_path(@project_module, params[:uuid], search_params), :class => 'btn btn-danger pull-right', :id => 'delete-record', confirm: "Are you sure you want to delete this record?"
  = link_to "Show History", show_arch_ent_history_path(@project_module, params[:uuid], search_params), :class => 'btn'
  - if !@related_arch_ents.empty?
    = link_to "Show Related Entities", '#related-arch-ents', :class => 'btn', :id => 'show-related'
/ %div.alert.alert-info
/   %p
/     This page will automatically update any changes to this entity and will update again upon navigating away from this page
.alert.alert-info
  Each value of a given FAIMS attribute can contain up to four pieces of data: constrained, unconstrained, certainty and annotation. These four aspects of a given value per each attribute can be viewed in the four columns below.
.container
  .row-fluid.labels
    .span12
      .span2
        %label
      .span2
        %label
          %a.tip{href:'#'}
            Constrained Data:
          .tooltiptext
            %p
              This column contains the value(s) from controlled vocabulary, list of terms, codes or other structured data defined by you for a given attribute.
            %p
              E.g. if your attribute is a dropdown, the selected value will appear here in the untranslated format.
            %p
              It may appear differently in your module depending on which Arch16n you are using. In the data schema and developer documentation this datatype is referred to as "Vocabulary".
      .span2
        %label
          %a.tip{href:'#'}
            Unconstrained Data:
          .tooltiptext
            %p
              This column contains the free text, numeric or datetime values in a given attribute.

            %p
              In the data schema and developer documentation this datatype is referred to as "Measure".
      .span3
        %label
          %a.tip{href:'#'}
            Annotation:
          .tooltiptext
            %p
              This column contains the annotation for a given attribute. The annotation replaces the paper margin, allowing for the recording of metadata about missing terms in dropdowns or other outstanding needs.

            %p
              In the data schema and developer documentation this datatype is referred to as "Freetext".
      .span1
        %label
          %a.tip{href:'#'}
            Certainty:
          .tooltiptext
            %p
              This column contains the certainty value for a given value in an attribute.The certainty is enabled by default for every attribute unless its removal has been requested.

            %p
              In the data schema and developer documentation this datatype is referred to as "Certainty".
      .span2
  - attributeGroup = @attributes.group_by{|a|a[3]}
  - attributeGroup.each do |key,val|
    .update-arch-ent-form
      = simple_form_for :attr, :url => batch_update_arch_ent_records_path, :method => "post" do|f|
        .arch_ent_record_content
          = f.hidden_field :uuid, :value => val[0][0]
          = f.hidden_field :attribute_id, :value => val[0][1], name: 'attr['+key+'][attribute_id]'
          - val.each_with_index do |attribute, index|
            .row-fluid.attribute-value
              .span12
                %label.span2
                  %h4.attribute-name=key
                  - if attribute[10] == 1
                    .form-attribute-error
                      - attribute[11].each_line(';') do |l|
                        - next if l.gsub(';', '').blank?
                        %span=l.gsub(';', '')
                - if !@vocab_name[attribute[1]].empty?
                  .span2
                    - vocabs = @vocab_name[attribute[1]]
                    - vocabs = vocab_name_to_breadcrumb(vocabs)
                    = f.input :vocab_id, collection: vocabs, include_blank: true, label: false, input_html: {name: 'attr['+key+'][vocab_id][]'}
                - else
                  .span2
                .span2
                  = f.text_area :measure, :value => "", name: 'attr['+key+'][measure][]', :class => "span12 resize-text #{attribute[12] == 1 ? "file-measure" : nil}", rows: 1
                .span3
                  = f.text_area :freetext, :value => "", name: 'attr['+key+'][freetext][]', :class => 'span12 resize-text', rows: 1
                .span1
                  = f.text_field :certainty, :value => "", name: 'attr['+key+'][certainty][]'
                .span2
                  = link_to '#', :class => 'btn add-attribute' do
                    %i.icon-plus
                  = link_to '#', :class => 'btn remove-attribute' do
                    %i.icon-minus
                  - if attribute[12] == 1
                    = link_to '#', :class => 'btn attribute-upload-file' do
                      %span='Upload'
                  - if index == 0
                    .clear
                    .ignore-errors-chk
                      = f.check_box 'ignore_errors', name: 'attr['+key+'][ignore_errors]'
                      Ignore Errors

- if !@files.empty?
  .attached-files
    %h2 Attached Files
    %ul
      - @files.each do |path, name|
        %li
          - file = File.join(@project_module.get_path(:project_module_dir), path)
          - if File.exists? file
            = link_to name, thumbnail_path(url: file)
          - else
            %p
              = name

- preview_images = @files.select { |f, n| File.exists? ThumbnailCreator.generate_thumbnail_filename(File.join(@project_module.get_path(:project_module_dir), f)) }
- if !preview_images.empty?
  %div.carousel.slide{:id => "slideshow"}
    %ol.carousel-indicators
      - preview_images.count.times do |i|
        - if i == 0
          %li.active{:'data-target' => "#slideshow", :'data-slide-to' => i}
        - else 
          %li{:'data-target' => "#slideshow", :'data-slide-to' => i}
    %div.carousel-inner
      - preview_images.each_with_index do |file, index|
        - original = File.join(@project_module.get_path(:project_module_dir), file[0])
        - thumbnail = ThumbnailCreator.generate_thumbnail_filename(original)
        - if index == 0
          %div.item.center-block.active
            %center
              %img.carousel-image{:src => thumbnail_path(url: (ThumbnailCreator.is_image? original and !ThumbnailCreator.show_thumbnail? original) ? original : thumbnail), :alt => file[1]}
              .carousel-caption.padding-extra
                %h4=file[1]
        - else
          %div.center-block.item
            %center
              %img.carousel-image{:src => thumbnail_path(url: (ThumbnailCreator.is_image? original and !ThumbnailCreator.show_thumbnail? original) ? original : thumbnail), :alt => file[1]}
              .carousel-caption.padding-extra
                %h4=file[1]
    %a.carousel-control.left{:href => "#slideshow", :'data-slide' => "prev"} &lsaquo;
    %a.carousel-control.right{:href => "#slideshow", :'data-slide' => "next"} &rsaquo;

#related-arch-ents
  %h2 Related Entities
  - if !@related_arch_ents.empty?
    - @related_arch_ents.each do |aent|
      %div.padding-extra
        %input{:type => 'checkbox', :name => 'id', :value => aent[1], :class => aent[3] == "true" ? "restore" : "delete" }
        = link_to aent[2], edit_arch_ent_records_path(@project_module, aent[0], search_params.merge(prev_uuid: params[:uuid]))
        .label.label-danger= "Deleted" if aent[3] == "true"
  - else
    No related entities to display
  .form-actions
    - if params[:show_deleted_related].blank?
      = link_to "Delete Selected Relationships", batch_delete_related_ents_path(@project_module, search_params), :id => 'delete-selected-related-ents-button', :class => 'btn btn-danger' unless @related_arch_ents.empty?
      = link_to "Show Deleted Relationships", '#', :id => 'show-hide-deleted', :class => 'btn'
    - else
      = link_to "Restore Selected Relationships", batch_restore_related_ents_path(@project_module, search_params), :id => 'restore-selected-related-ents-button', :class => 'btn btn-warning' unless @related_arch_ents.empty?
      = link_to "Hide Deleted Relationships", '#', :id => 'show-hide-deleted', :class => 'btn'

%form{:action => edit_arch_ent_records_path(@project_module, params[:uuid]), :method => "get", :id => 'show-hide-deleted-form'}
  %input{:type => 'hidden', :value => params[:type], :name => 'type'}
  %input{:type => 'hidden', :value => params[:user], :name => 'user'}
  %input{:type => 'hidden', :value => params[:query], :name => 'query'}
  %input{:type => 'hidden', :value => params[:offset], :name => 'offset', :value => params[:offset]}
  %input{:type => 'hidden', :value => params[:per_page], :name => 'per_page', :value => @limit}
  - if params[:show_deleted_related].blank?
    %input{:type => 'hidden', :value => 'true', :name => 'show_deleted_related'}
%form{:method => 'post', :id => 'delete-rel-form'}
  %input{:type => 'hidden', :value => form_authenticity_token, :name => 'authenticity_token'}
  %input{:type => 'hidden', :name => 'selected', :id => 'selected-rels-delete'}
%form{:method => 'post', :id => 'restore-rel-form'}
  %input{:type => 'hidden', :value => form_authenticity_token, :name => 'authenticity_token'}
  %input{:type => 'hidden', :name => 'selected', :id => 'selected-rels-restore'} 
  
%div.footer_space
#setting_up.hidden.indicator
  = image_tag "loading.gif"
  %p
    %span Loading
#uploading_files.hidden.indicator
  = image_tag "loading.gif"
  %p
    %span Uploading file/s

#attribute-file-upload.hidden
  = simple_form_for :attr_file, :url => upload_arch_ent_attribute_file_path, :method => "post", :remote => true do |f|
    = f.label 'attribute_file', "File/s:"
    = f.file_field 'attribute_file', multiple: true
    = f.hidden_field 'attribute_id'